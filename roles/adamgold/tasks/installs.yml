- name: homebrew taps
  command: brew tap {{ item }}
  loop: "{{ homebrew_taps }}"
  tags:
    - brew

- name: Install homebrew packages
  homebrew:
    name: "{{ item }}"
    state: latest
  loop: "{{ homebrew_packages }}"
  tags:
    - brew

- name: Install homebrew cask packages
  command: "brew install --cask {{ item }} --appdir {{ homebrew_cask_appdir }}"
  loop: "{{ homebrew_cask_packages }}"
  tags:
    - brew

- name: homebrew cleanup
  command: brew cleanup

# If pyenv fails, check https://github.com/pyenv/pyenv/wiki/Common-build-problems#build-failed-error-the-python-zlib-extension-was-not-compiled-missing-the-zlib
- name: python versions
  command: pyenv install {{ item }}
  register: pyenv_install_result
  failed_when: >
    pyenv_install_result.rc != 0 and
    pyenv_install_result.stderr_lines != ["pyenv: /Users/adamgold/.pyenv/versions/" + item + " already exists"]
  loop: "{{ pyenv_python_versions }}"
  tags:
    - python
    - pyenv

- name: python versions active
  command: pyenv global {{ pyenv_python_versions|join(" ") }}
  tags:
    - python
    - pyenv

- name: python versions shims rehashed
  # Needs running after every update of pyenv, at least, to fix the pyenv shims
  command: pyenv rehash

- name: python versions latest Cython, pip, and pip-tools
  pip:
    name:
      - Cython
      - pip
      - pip-tools
    state: latest
    executable: '~/.pyenv/versions/{{ item }}/bin/pip{% if "pypy3" in item %}3{% endif %}'
  environment:
    PIP_REQUIRE_VIRTUALENV: ""
  loop: "{{ pyenv_python_versions }}"
  tags:
    - python
    - pip
    - pyenv

- name: Install pipx packages
  command: "pipx install {{ item }}"
  loop: "{{ pipx_packages }}"
  ignore_errors: yes
  tags:
    - python
    - pipx

- name: Check if .zshrc exists
  stat:
    path: ~/.zshrc
  register: stat_rc_result

- name: Check if .oh-my-zsh exists
  stat:
    path: ~/.oh-my-zsh
  register: stat_oh_my_zsh_result

- name: Cloning oh-my-zsh
  git: repo=https://github.com/robbyrussell/oh-my-zsh
    dest=~/.oh-my-zsh
  when: not stat_oh_my_zsh_result.stat.exists

- name: Check if prezto exists
  stat:
    path: ~/.zpreztorc
  register: stat_prezto_result

- name: Cloning prezto
  git: repo=https://github.com/sorin-ionescu/prezto
    dest=~/.zprezto
  when: not stat_prezto_result.stat.exists

- name: Installing prezto
  shell: |
    setopt EXTENDED_GLOB
    for rcfile in "${ZDOTDIR:-$HOME}"/.zprezto/runcoms/^README.md(.N); do
      if [[ $rcfile != "$HOME/.zprezto/runcoms/zshrc" ]]; then ln -s "$rcfile" "${ZDOTDIR:-$HOME}/.${rcfile:t}"; fi
    done
  when: not stat_prezto_result.stat.exists

- name: Cloning prezto config
  git: repo=https://github.com/belak/prezto-contrib
    dest=~/.zprezto/contrib
  when: not stat_prezto_result.stat.exists

- name: Creating new ~/.zshrc
  copy: src=~/.oh-my-zsh/templates/zshrc.zsh-template
    dest=~/.zshrc
  when: not stat_rc_result.stat.exists
